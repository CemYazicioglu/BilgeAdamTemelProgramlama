<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbTop.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="timerTopHareket.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>